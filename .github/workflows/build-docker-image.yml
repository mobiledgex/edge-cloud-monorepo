name: Build Docker Image
on:
  push:
    branches:
      - "!*"
    tags:
      - "*"
jobs:
  build-docker-image:
    name: Build the edge-cloud image
    runs-on: ubuntu-latest
    env:
      REGISTRY: harbor.mobiledgex.net
      ARTIFACTORY_PATH: https://artifactory.mobiledgex.net/artifactory/build-artifacts/swagger-spec
    steps:
      -
        name: Check out the monorepo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}
          submodules: recursive
          fetch-depth: 0
      -
        name: Compute docker image meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/mobiledgex/edge-cloud
      -
        name: Compute build tag
        id: build-tag
        run: echo "::set-output name=BUILD_TAG::$(git describe --always --dirty=+), $(TZ=UTC date +'%Y-%m-%d'), $(echo -e '${{steps.meta.outputs.tags}}' | head -n 1 | awk -F':' '{print $NF}')"
      -
        name: Set up builder username
        run: git config --global user.name github
      -
        name: Set up docker buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Log in to registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      -
        name: Set up .dockerignore
        run: cp edge-cloud/.dockerignore .
      -
        name: Build edge-cloud image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./edge-cloud/docker/Dockerfile.edge-cloud
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_TAG=${{ steps.build-tag.outputs.BUILD_TAG }}
            REGISTRY=${{ env.REGISTRY }}/mobiledgex
      -
        name: Upload swagger
        run: |
          IMAGE=$( echo -e '${{steps.meta.outputs.tags}}' | head -n 1 )
          IMAGE_TAG=$( echo "$IMAGE" | awk -F':' '{print $NF}')
          for docs in internal external; do
            docker run --rm "$IMAGE" dump-docs "$docs" >"${docs}.json"
          done
          curl -sf -u "swagger-upload:${{ secrets.ARTIFACTORY_TOKEN }}" -XPUT internal.json "${{ env.ARTIFACTORY_PATH }}/${IMAGE_TAG}/apidocs.swagger.json"
          curl -sf -u "swagger-upload:${{ secrets.ARTIFACTORY_TOKEN }}" -XPUT external.json "${{ env.ARTIFACTORY_PATH }}/${IMAGE_TAG}/external/apidocs.swagger.json"
